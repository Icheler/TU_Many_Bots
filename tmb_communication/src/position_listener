#!/usr/bin/env python3
import roslib
import rospy
import math
import tf
import geometry_msgs.msg
from geometry_msgs.msg import Point, Quaternion, Pose


if __name__ == '__main__':
    rospy.init_node('turtle_tf_listener')
    position = Point()
    orientation = Quaternion()
    pose = Pose()
    listener = tf.TransformListener()
    name = rospy.get_param('~name')
    pub = rospy.Publisher('pose', Pose, queue_size=10)

    rate = rospy.Rate(10.0)
    while not rospy.is_shutdown():
        try:
            (trans,rot) = listener.lookupTransform('map', f'{name}/base_link', rospy.Time(0))
        except (tf.LookupException, tf.ConnectivityException, tf.ExtrapolationException):
            continue

        #t3 = +2.0 * (rot[3] * rot[2] + rot[0] * rot[1])
        #t4 = +1.0 - 2.0 * (rot[1] * rot[1] + rot[2] * rot[2])
        #yaw_z = math.atan2(t3, t4)

        position.x = trans[0]
        position.y = trans[1]
        position.z = trans[2]
        orientation.x = rot[0]
        orientation.y = rot[1]
        orientation.z = rot[2]
        orientation.w = rot[3]
        pose.position = position
        pose.orientation = orientation


        pub.publish(pose)
        rate.sleep()