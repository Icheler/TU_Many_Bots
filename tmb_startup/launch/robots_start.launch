<launch>
    <arg name="robot" default="$(optenv tmb_ROBOT rto-1)" doc="Robot type [rto-1]"/>
    <arg name="robot_blind" default="$(optenv tmb_ROBOT_BLIND rto-blind)" doc="Robot type [rto-1-blind]"/>
    <arg name="robot_env" default="$(optenv tmb_ROBOT_ENV simple_corridor)" doc="Simulation world [maze, maze_simple, simple_corridor]"/>
    <include file="$(find gazebo_ros)/launch/empty_world.launch">
        <arg name="world_name" value="$(find tmb_models)/worlds/$(arg robot_env).world"/>
        <arg name="paused" value="false"/>
        <arg name="use_sim_time" value="true"/>
        <arg name="gui" value="true"/>
        <arg name="headless" value="false"/>
        <arg name="debug" value="false"/>
    </include>

    <param name="robot_description" command="$(find xacro)/xacro --inorder $(find tmb_models)/urdf/robots/$(arg robot).urdf.xacro"/>
    <param name="robot_blind_description" command="$(find xacro)/xacro --inorder $(find tmb_models)/urdf/robots/$(arg robot_blind).urdf.xacro"/>


    <group ns="robot1">
        <param name="tf_prefix" value="robot1"/>
        <arg name="name" default="robot1" />

        <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher" output="screen">
            <param name="publish_frequency" type="double" value="20.0"/>
        </node>

        <node pkg="gazebo_ros" type="spawn_model" name="spawn_urdf"  args="-urdf -model $(arg name)
            -x $(env tmb_start_robot1_x)
            -y $(env tmb_start_robot1_y)
            -z $(env tmb_start_robot1_z)
            -Y $(env tmb_start_robot1_yaw)
            -param /robot_description" />

        <node pkg="tmb_communication" type="position_listener" name="listentf" output="screen" >
            <param name="name" type="str" value="robot1"/>
        </node>
    </group>
    <group ns="robot2" if="$(env tmb_start_both)">
        <param name="tf_prefix" value="robot2"/>
        <arg name="name"  value="robot2"/>
        <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher" output="screen">
            <param name="publish_frequency" type="double" value="20.0"/>
        </node>

        <node pkg="gazebo_ros" type="spawn_model" name="spawn_urdf"  args="-urdf -model $(arg name)
          -x $(env tmb_start_robot2_x)
          -y $(env tmb_start_robot2_y)
          -z $(env tmb_start_robot2_z)
          -Y $(env tmb_start_robot2_yaw)
          -param /robot_description" />

        <node pkg="tmb_communication" type="position_listener" name="listentf" output="screen" >
            <param name="name" type="str" value="robot2"/>
        </node>
    </group>
    <group ns="robot_blind">
        <param name="tf_prefix" value="robot_blind"/>
            <arg name="name"  value="robot_blind"/>

        <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher" output="screen">
            <param name="publish_frequency" type="double" value="20.0"/>
        </node>


        <node pkg="gazebo_ros" type="spawn_model" name="spawn_urdf"  args="-urdf -model $(arg name)
          -x $(env tmb_start_robot_blind_x)
          -y $(env tmb_start_robot_blind_y)
          -z $(env tmb_start_robot_blind_z)
          -Y $(env tmb_start_robot_blind_yaw)
          -param /robot_blind_description" />
        <node pkg="tmb_communication" type="gazebo_position_listener" name="gazebo_pos_listener" output="screen" >
            <param name="name" type="str" value="robot_blind"/>
        </node>
    </group>
    <group ns="goal">
      <node name="goal_spawn_urdf" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen"
        args="-file $(find tmb_models)/objects/Goal/model.sdf -sdf
        -x $(env tmb_start_goal_x)
        -y $(env tmb_start_goal_y)
        -Y $(env tmb_start_goal_yaw)
        -model goal_cube"/>
    </group>
</launch>
